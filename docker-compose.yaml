networks:
  app-network:
    driver: bridge

services:
  nginx:
    image: nginx:alpine
    container_name: web-server
    restart: unless-stopped
    volumes:
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
      - ./src:/var/www/html
    links:
      - php-fpm
    ports:
      - "80:80"
    networks:
      - app-network

  php-fpm:
    build:
      context: .
      dockerfile: ./docker/php/Dockerfile
    container_name: php-fpm
    restart: unless-stopped
    volumes:
      - ./src:/var/www/html
#    depends_on:
#      - mysql
    networks:
      - app-network

#  mysql:
#    image: mysql:latest
#    container_name: mysql
#    restart: unless-stopped
#    tty: true
#    # ports:
#    #   - 3306:3306
#    environment:
#      MYSQL_DATABASE: ${DB_DATABASE:-developer}
#      MYSQL_USER: ${DB_USERNAME:-developer}
#      MYSQL_PASSWORD: ${DB_PASSWORD:-secret}
#      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD:-secret}
#    volumes:
#      - ./data/mysql:/var/lib/mysql
#    networks:
#      - app-network

#  npm:
#    image: node:22-alpine
#    container_name: npm
#    volumes:
#      - ./src:/var/www/html
#    working_dir: /var/www/html
#    entrypoint: [ 'npm' ]
#    networks:
#      - app-network

#  redis:
#    image: redis:alpine
#    container_name: redis
#    restart: unless-stopped
#    # ports:
#    #   - 6379:6379
#    networks:
#      - app-network

#  mailhog:
#    image: mailhog/mailhog:latest
#    container_name: mailhog
#    ports:
#      - "1025:1025"
#      - "8025:8025"
#    networks:
#      - app-network
